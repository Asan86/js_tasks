/* 1) Составьте программу, которая принимает с клавиатуры числа, 
   пока не будет введено значение 99. Программа должна подсчитать, 
   сколько чисел было введено с клавиатуры (не считая значения 99) 
   и вывести эту информацию на экран.
   ввод: 59, 74, 48, 70, 99 ⇒ вывод: кол-во чисел - 4
 */
let count1 = 0;
while (true) {
  const number = prompt("Введите число (99 для остановки):");
  if (number === "99") {
    break;
  } else if (!isNaN(number)) {
    count1++;
  }
}
alert("Количество введенных чисел: " + count1);

/* 2) Составьте программу, которая принимает с клавиатуры числа, 
   пока не будет введено значение 999. Программа должна подсчитать, 
   сколько чисел было введено с клавиатуры, чему равна сумма этих 
   чисел (не считая значения 999), и вывести эту информацию на экран.
   ввод: 89, 174, 27, 999 ⇒ вывод: кол-во чисел - 3; сумма = 290
 */
let sum = 0;
let count2 = 0;
let input = prompt("Введите число");
while (input != 999) {
  sum += parseInt(input);
  count2++;
  input = prompt("Введите число");
}
alert(`Количество чисел: ${count2}. Сумма чисел: ${sum}.`);

/* 3) Напишите функцию, которая возвращает объект, 
   составленный из значений вложенных массивов. 
   Первое значение - ключ, второе - значение. 
   Ожидаемый результат: [['a', 1], ['b', 2]] ===> { a: 1, b: 2 }

   const data = [['a', 1], ['b', 2]]; 
   console.log(fromPairs(data))  // { 'a': 1, 'b': 2 } */

function newObj(arr) {
  return arr.reduce((result, [key, value]) => {
    result[key] = value;
    return result;
  }, {});
}
const data = [
  ["a", 1],
  ["b", 2],
];
console.log(newObj(data));
